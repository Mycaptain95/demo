// 参考https://gitee.com/brother-zheng-gan/geek-mobile-terminal-h5/
.scale-hairline-common(@color, @top, @right, @bottom, @left) {
    content: '';
    position: absolute;
    display: block;
    z-index: 1;
    top: @top;
    right: @right;
    bottom: @bottom;
    left: @left;
    background-color: @color;
}


// 添加边框
/* 
      用法：
    
      // 导入
      @import '@scss/hairline.scss';
    
      // 在类中使用
      .a {
          position: relative;
        @include hairline(bottom, #f0f0f0);
      }
    */

.hairline(@direction: all, @color: #000, @radius: 0) when(@direction=top) {
    border-top: 1px solid $color;

    // min-resolution 用来检测设备的最小像素密度
    @media (min-resolution: 2dppx),
    (-webkit-min-device-pixel-ratio: 2) {
        border-top: none;

        &::before {
            .scale-hairline-common(@color, 0, auto, auto, 0);
            width: 100%;
            height: 1px;
            transform-origin: 50% 50%;
            transform: scaleY(0.5);

            @media (min-resolution: 3dppx),
            (-webkit-min-device-pixel-ratio: 3) {
                transform: scaleY(0.33);
            }
        }
    }
}

.hairline(@direction: all, @color: #000, @radius: 0) when(@direction=right) {
    border-right: 1px solid @color;

    @media (min-resolution: 2dppx),
    (-webkit-min-device-pixel-ratio: 2) {
        border-right: none;

        &::after {
            .scale-hairline-common(@color, 0, 0, auto, auto);
            width: 1px;
            height: 100%;
            background: @color;
            transform-origin: 100% 50%;
            transform: scaleX(0.5);

            @media (min-resolution: 3dppx),
            (-webkit-min-device-pixel-ratio: 3) {
                transform: scaleX(0.33);
            }
        }
    }
}

.hairline(@direction: all, @color: #000, @radius: 0) when(@direction=bottom) {
    border-bottom: 1px solid @color;

    @media (min-resolution: 2dppx),
    (-webkit-min-device-pixel-ratio: 2) {
        border-bottom: none;

        &::after {
            .scale-hairline-common(@color, auto, auto, 0, 0);
            width: 100%;
            height: 1px;
            transform-origin: 50% 100%;
            transform: scaleY(0.5);

            @media (min-resolution: 3dppx),
            (-webkit-min-device-pixel-ratio: 3) {
                transform: scaleY(0.33);
            }
        }
    }
}

.hairline(@direction: all, @color: #000, @radius: 0) when(@direction=left) {
    border-left: 1px solid @color;

    @media (min-resolution: 2dppx),
    (-webkit-min-device-pixel-ratio: 2) {
        border-left: none;

        &::before {
            .scale-hairline-common(@color, 0, auto, auto, 0);
            width: 1px;
            height: 100%;
            transform-origin: 100% 50%;
            transform: scaleX(0.5);

            @media (min-resolution: 3dppx),
            (-webkit-min-device-pixel-ratio: 3) {
                transform: scaleX(0.33);
            }
        }
    }
}

.hairline(@direction: all, @color: #000, @radius: 0) when(@direction=all) {
    border: 1px solid @color;
    border-radius: @radius;

    @media (min-resolution: 2dppx),
    (-webkit-min-device-pixel-ratio: 2) {
        position: relative;
        border: none;

        &::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            width: 200%;
            height: 200%;
            border: 1px solid @color;
            border-radius: @radius * 2;
            transform-origin: 0 0;
            transform: scale(0.5);
            box-sizing: border-box;
            pointer-events: none;
        }
    }
}

// 移除边框
.hairline-remove(@position: all) when(@position =left) {
    border-left: 0;

    &::before {
        display: none !important;
    }
}

.hairline-remove(@position: all) when(@position =right) {
    border-right: 0;

    &::after {
        display: none !important;
    }
}

.hairline-remove(@position: all) when(@position =top) {
    border-top: 0;

    &::before {
        display: none !important;
    }
}

.hairline-remove(@position: all) when(@position =bottom) {
    border-bottom: 0;

    &::after {
        display: none !important;
    }
}

.hairline-remove(@position: all) when(@position =all) {
    border: 0;

    &::before {
        display: none !important;
    }

    &::after {
        display: none !important;
    }
}